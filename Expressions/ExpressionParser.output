Grammar

    0 $accept: sequence $end

    1 sequence: expr
    2         | sequence ',' expr

    3 expr: CONSTANT
    4     | RANDOM
    5     | IN_VARIABLE
    6     | OUT_VARIABLE
    7     | UNIVARIATE '(' expr ')'
    8     | BIVARIATE '(' expr ',' expr ')'
    9     | '-' expr
   10     | NOT expr
   11     | expr AND expr
   12     | expr OR expr
   13     | expr EQ expr
   14     | expr NEQ expr
   15     | expr LEQ expr
   16     | expr GEQ expr
   17     | expr '<' expr
   18     | expr '>' expr
   19     | expr '+' expr
   20     | expr '-' expr
   21     | expr '*' expr
   22     | expr '/' expr
   23     | expr '?' expr ':' expr
   24     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 8 24
')' (41) 7 8 24
'*' (42) 21
'+' (43) 19
',' (44) 2 8
'-' (45) 9 20
'/' (47) 22
':' (58) 23
'<' (60) 17
'>' (62) 18
'?' (63) 23
error (256)
CONSTANT (258) 3
IN_VARIABLE (259) 5
OUT_VARIABLE (260) 6
UNIVARIATE (261) 7
BIVARIATE (262) 8
RANDOM (263) 4
OR (264) 12
AND (265) 11
NEQ (266) 14
EQ (267) 13
LEQ (268) 15
GEQ (269) 16
NOT (270) 10


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
sequence (28)
    on left: 1 2, on right: 0 2
expr (29)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24, on right: 1 2 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24


State 0

    0 $accept: . sequence $end

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    sequence  go to state 10
    expr      go to state 11


State 1

    3 expr: CONSTANT .

    $default  reduce using rule 3 (expr)


State 2

    5 expr: IN_VARIABLE .

    $default  reduce using rule 5 (expr)


State 3

    6 expr: OUT_VARIABLE .

    $default  reduce using rule 6 (expr)


State 4

    7 expr: UNIVARIATE . '(' expr ')'

    '('  shift, and go to state 12


State 5

    8 expr: BIVARIATE . '(' expr ',' expr ')'

    '('  shift, and go to state 13


State 6

    4 expr: RANDOM .

    $default  reduce using rule 4 (expr)


State 7

    9 expr: '-' . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 14


State 8

   10 expr: NOT . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 15


State 9

   24 expr: '(' . expr ')'

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 16


State 10

    0 $accept: sequence . $end
    2 sequence: sequence . ',' expr

    $end  shift, and go to state 17
    ','   shift, and go to state 18


State 11

    1 sequence: expr .
   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '?'  shift, and go to state 19
    OR   shift, and go to state 20
    AND  shift, and go to state 21
    '<'  shift, and go to state 22
    '>'  shift, and go to state 23
    NEQ  shift, and go to state 24
    EQ   shift, and go to state 25
    LEQ  shift, and go to state 26
    GEQ  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 1 (sequence)


State 12

    7 expr: UNIVARIATE '(' . expr ')'

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 32


State 13

    8 expr: BIVARIATE '(' . expr ',' expr ')'

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 33


State 14

    9 expr: '-' expr .
   11     | expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 9 (expr)


State 15

   10 expr: NOT expr .
   11     | expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    $default  reduce using rule 10 (expr)


State 16

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr
   24     | '(' expr . ')'

    '?'  shift, and go to state 19
    OR   shift, and go to state 20
    AND  shift, and go to state 21
    '<'  shift, and go to state 22
    '>'  shift, and go to state 23
    NEQ  shift, and go to state 24
    EQ   shift, and go to state 25
    LEQ  shift, and go to state 26
    GEQ  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 34


State 17

    0 $accept: sequence $end .

    $default  accept


State 18

    2 sequence: sequence ',' . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 35


State 19

   23 expr: expr '?' . expr ':' expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 36


State 20

   12 expr: expr OR . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 37


State 21

   11 expr: expr AND . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 38


State 22

   17 expr: expr '<' . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 39


State 23

   18 expr: expr '>' . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 40


State 24

   14 expr: expr NEQ . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 41


State 25

   13 expr: expr EQ . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 42


State 26

   15 expr: expr LEQ . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 43


State 27

   16 expr: expr GEQ . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 44


State 28

   19 expr: expr '+' . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 45


State 29

   20 expr: expr '-' . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 46


State 30

   21 expr: expr '*' . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 47


State 31

   22 expr: expr '/' . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 48


State 32

    7 expr: UNIVARIATE '(' expr . ')'
   11     | expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '?'  shift, and go to state 19
    OR   shift, and go to state 20
    AND  shift, and go to state 21
    '<'  shift, and go to state 22
    '>'  shift, and go to state 23
    NEQ  shift, and go to state 24
    EQ   shift, and go to state 25
    LEQ  shift, and go to state 26
    GEQ  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 49


State 33

    8 expr: BIVARIATE '(' expr . ',' expr ')'
   11     | expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    ','  shift, and go to state 50
    '?'  shift, and go to state 19
    OR   shift, and go to state 20
    AND  shift, and go to state 21
    '<'  shift, and go to state 22
    '>'  shift, and go to state 23
    NEQ  shift, and go to state 24
    EQ   shift, and go to state 25
    LEQ  shift, and go to state 26
    GEQ  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31


State 34

   24 expr: '(' expr ')' .

    $default  reduce using rule 24 (expr)


State 35

    2 sequence: sequence ',' expr .
   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '?'  shift, and go to state 19
    OR   shift, and go to state 20
    AND  shift, and go to state 21
    '<'  shift, and go to state 22
    '>'  shift, and go to state 23
    NEQ  shift, and go to state 24
    EQ   shift, and go to state 25
    LEQ  shift, and go to state 26
    GEQ  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 2 (sequence)


State 36

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr
   23     | expr '?' expr . ':' expr

    '?'  shift, and go to state 19
    ':'  shift, and go to state 51
    OR   shift, and go to state 20
    AND  shift, and go to state 21
    '<'  shift, and go to state 22
    '>'  shift, and go to state 23
    NEQ  shift, and go to state 24
    EQ   shift, and go to state 25
    LEQ  shift, and go to state 26
    GEQ  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31


State 37

   11 expr: expr . AND expr
   12     | expr . OR expr
   12     | expr OR expr .
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    AND  shift, and go to state 21
    '<'  shift, and go to state 22
    '>'  shift, and go to state 23
    NEQ  shift, and go to state 24
    EQ   shift, and go to state 25
    LEQ  shift, and go to state 26
    GEQ  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 12 (expr)


State 38

   11 expr: expr . AND expr
   11     | expr AND expr .
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '<'  shift, and go to state 22
    '>'  shift, and go to state 23
    NEQ  shift, and go to state 24
    EQ   shift, and go to state 25
    LEQ  shift, and go to state 26
    GEQ  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 11 (expr)


State 39

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   17     | expr '<' expr .
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 17 (expr)


State 40

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   18     | expr '>' expr .
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 18 (expr)


State 41

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   14     | expr NEQ expr .
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 14 (expr)


State 42

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   13     | expr EQ expr .
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 13 (expr)


State 43

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   15     | expr LEQ expr .
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 15 (expr)


State 44

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   16     | expr GEQ expr .
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 16 (expr)


State 45

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   19     | expr '+' expr .
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 19 (expr)


State 46

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   20     | expr '-' expr .
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 20 (expr)


State 47

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   21     | expr '*' expr .
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    $default  reduce using rule 21 (expr)


State 48

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   22     | expr '/' expr .
   23     | expr . '?' expr ':' expr

    $default  reduce using rule 22 (expr)


State 49

    7 expr: UNIVARIATE '(' expr ')' .

    $default  reduce using rule 7 (expr)


State 50

    8 expr: BIVARIATE '(' expr ',' . expr ')'

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 52


State 51

   23 expr: expr '?' expr ':' . expr

    CONSTANT      shift, and go to state 1
    IN_VARIABLE   shift, and go to state 2
    OUT_VARIABLE  shift, and go to state 3
    UNIVARIATE    shift, and go to state 4
    BIVARIATE     shift, and go to state 5
    RANDOM        shift, and go to state 6
    '-'           shift, and go to state 7
    NOT           shift, and go to state 8
    '('           shift, and go to state 9

    expr  go to state 53


State 52

    8 expr: BIVARIATE '(' expr ',' expr . ')'
   11     | expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr

    '?'  shift, and go to state 19
    OR   shift, and go to state 20
    AND  shift, and go to state 21
    '<'  shift, and go to state 22
    '>'  shift, and go to state 23
    NEQ  shift, and go to state 24
    EQ   shift, and go to state 25
    LEQ  shift, and go to state 26
    GEQ  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 54


State 53

   11 expr: expr . AND expr
   12     | expr . OR expr
   13     | expr . EQ expr
   14     | expr . NEQ expr
   15     | expr . LEQ expr
   16     | expr . GEQ expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '?' expr ':' expr
   23     | expr '?' expr ':' expr .

    OR   shift, and go to state 20
    AND  shift, and go to state 21
    '<'  shift, and go to state 22
    '>'  shift, and go to state 23
    NEQ  shift, and go to state 24
    EQ   shift, and go to state 25
    LEQ  shift, and go to state 26
    GEQ  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 23 (expr)


State 54

    8 expr: BIVARIATE '(' expr ',' expr ')' .

    $default  reduce using rule 8 (expr)
